#************************ User's configuration file for the CLIMaCCF *******************#


#########################################################################################
# Configuration of the calculation of algorithmic climate change functions (aCCFs)
#########################################################################################  

## If true, efficacies are considered in the aCCF calculation
efficacy: true              
        # Options: true, false
efficacy-option: lee_2021
        # Options one:  'lee_2021' (efficacies according to Lee et al. (2021))
        # Options two:   user-defined efficacies:
        #    CH4: xx
        #    CO2: xx
        #    Cont.: xx
        #    H2O: xx
        #    O3: xx

# Specifies the version of the prototype aCCF
aCCF-V: V1.0A
        # currently 2 options for aCCFs: 'V1.0': Yin et al. (2023), 'V1.0A': Matthes et al. (2023)

# User-defined scaling factors of the above selected aCCF version. Not recommended to 
# be changed from default value 1, unless modification of the aCCFs is wanted (e.g. sensitivity studies)
aCCF-scalingF:
  CH4: 1
  CO2: 1
  Cont.: 1
  H2O: 1
  O3: 1

# Specifies the climate indicator. Currently, Average Temperature Response (ATR) has been implemented
climate_indicator: ATR
        # Options: 'ATR'

# Specifies the emission scenario of the climate metric. Currently, pulse emission and increasing 
# future emission scenario (business as usual) included
emission_scenario: future_scenario
        # Options: 'pulse' and 'future_scenario'

# Specifies the time horizon (in years) over which the selected climate indicator is calculated
TimeHorizon: 20
        # Options: 20, 50, 100

# Determination of persistent contrail formation areas (PCFA), needed to calculate aCCF of (day/night) contrails.
PCFA: PCFA-ISSR
       # Options: 'PCFA-ISSR' (PCFA defined by ice-supersaturated regions with threshold for relative humidity over ice and temperature), 'PCFA-SAC' (Contrail formation with Schmidt-Appleman criterion SAC (Appleman, 1953) & 
       # contrail persistence, if ambient air is ice supersaturated) 

# Parameters for calculating ice-supersaturated regions (ISSR)
PCFA-ISSR:
  # Specifies the threshold of relative humidity over ice in order to identify ice supersaturated regions. 
  # Note that for persistent contrails relative humidity over ice has to be greater 100%. However to take into account subgridscale variability in humidity field of input data, the threshold of relative humidity (over ice) 
  # has to be adopted for the selected resolution of data product (for more details see Dietmueller et al. 2022)
  rhi_threshold: 0.95
       # Options: user defined threshold value < 1. Threshold depends on the used data set, e.g., 
       # in case of the reanalysis data product ERA5 with high resolution (HRES) it is 0.9
  temp_threshold: 235

# Parameters for calculating Schmidt-Appleman criterion (SAC). These parameters vary for different aircraft types.
PCFA-SAC:
  # water vapour emission's index in [kg(H2O)/kg(fuel)]
  EI_H2O: 1.25
  # Fuel specific energy in [J/kg]
  Q: 43000000.0
  # Engine's overall efficiency
  eta: 0.3


###########################################################################################
# Technical specifications of aircraft/engine dependent parameters
###########################################################################################  

# Specifies the values of NOx emission index (NOx_EI) and flown distance per kg burnt fuel (F_km) 
NOx_EI&F_km: TTV
       # Options: 'TTV' for typical transatlantic fleet mean values (NOx_EI, F_km) from literature (Penner et al. 1999, Graver and Rutherford 2018) and
       # 'ac_dependent' for altitude and aircraft/engine dependent values (NOx_EI, F_km) 
       # Note that if Confg['NOx_EI&F_km'] = 'TTV', the following confg['ac_type'] is ignored.

# If Confg['NOx_EI&F_km'] = 'ac_dependent', aircraft class (i.e. regional, single-aisle, wide-body) needs to be selected. 
# For these aircraft classes aggregated fleet-level values of NOx_EI and F_km are provided (for more details see Dietmueller et al. 2022).
ac_type: wide-body
       # Options: 'regional', 'single-aisle', 'wide-body'
       
############################################################################################
# Specifies the saved output file
############################################################################################  

# If true, the primary mode ozone (PMO) effect is included to the CH4 aCCF and the total NOx aCCF
PMO: true
      # Options: true, false

# If true, the total NOx aCCF is calculated (i.e. aCCF-NOx = aCCF-CH4 + aCCF-O3)
NOx_aCCF: false
      # Options: true, false

# If true, all individual aCCFs are converted to the same unit of K/kg(fuel) and saved in the output file.
unit_K/kg(fuel): false
      # Options: true, false

# If true, merged non-CO2 aCCF is calculated
merged: false
      # Options: true, false

# If true, climate hotspots (regions that are very sensitive to aviation emissions) are calculated (for more details see Dietmueller et al. 2022)
Chotspots: false
      # Options: true, false

# If constant, climate hotspots are calculated based on the user-specified threshold, 
# if dynamic, the thresholds for identifying climate hotspots are determined dynamically by calculating the 
# percentile value of the merged aCCF over a certain geographical region (for details, see Dietmueller et al. 2022).
Chotspots_calc_method: dynamic
      # Options: constant, dynamic 

# Specifies the constant threshold for calculating climate hotspots (if Chotspots_calc_method: constant).
Chotspots_calc_method_cons: 1e-13

# Specifies the percentage (e.g. 95%) of the percentile value as well as the geographical region for which the percentile of the merged aCCF is calculated.
# Thus the percentile defines the dynamical threshold for climate hotspots (if Chotspots_calc_method: dynamic). Note that percentiles are saved in the output file 
Chotspots_calc_method_dynm:
      hotspots_percentile: 95
            # Options: percentage < 100              
      latitude: false 
            # Options: (lat_min, lat_max), false  
      longitude: false
            # Options: (lon_min, lon_max), false              

# If true, it assigns binary values to climate hotspots (0: areas with climate impacts below a specified threshold. 1: areas with climate impacts above a specified threshold)
# If false, it assigns 0 for areas with climate impacts below the specified threshold and provides values of merged aCCFs for areas with climate impacts above the threshold.
hotspots_binary: true
      # Options: true, false

# If true, meteorological input variables, needed to calculate aCCFs, are saved in the netCDF output file in same resolution as the aCCFs
MET_variables: true
      # Options: true, false      

# If true, polygons containing climate hotspots will be saved in the GeoJson file
geojson: true
      # Options: true, false

# Specifies the color of polygons
color: copper
      # Options: colors of cmap, e.g., copper, jet, Reds

# Specifies the horizontal resolution      
horizontal_resolution: 0.5
      # Options: lower resolutions in degrees      

# Specifies the forecast step   
forecast_step: false
      # Options: int in hours (ERA5 HRES: 1, ERA5 ensemble: 3)   

# Specifies geographical region      
lat_bound: false
      # Options: (lat_min, lat_max), false
lon_bound: false
      # Options: (lon_min, lon_max), false

# Specifies the output format 
save_format: netCDF
      # Options: netCDF (netcdf, nc) and PICKLE (pickle, Pickle)      

########################################################################################################
# Specifies output for statistical analysis, if ensemble prediction system (EPS) data products are used
######################################################################################################## 

# The following two options (confg['mean'], confg['std']) are ignored if the input data are deterministic

# If true, mean values of aCCFs and meteorological variables are saved in the output file
mean: false
      # Options: true, false

# If true, standard deviation of aCCFs and meteorological variables are saved in the output file
std: false
      # Options: true, false
